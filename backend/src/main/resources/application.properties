########################################
# Datasource (Postgres: local by default;
# override via env on Render/Supabase)
########################################
# Example for Render/Supabase (set as env var, not here):
# SPRING_DATASOURCE_URL=jdbc:postgresql://aws-1-eu-central-1.pooler.supabase.com:5432/postgres?sslmode=require&ApplicationName=vaultflow-render
# SPRING_DATASOURCE_USERNAME=postgres.ntxmfvfgsnavyvzinsrp
# SPRING_DATASOURCE_PASSWORD=YOUR_SUPABASE_DB_PASSWORD

spring.datasource.url=${SPRING_DATASOURCE_URL:${DATABASE_URL:jdbc:postgresql://localhost:5432/securedb}}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${DATABASE_USERNAME:secureuser}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${DATABASE_PASSWORD:securepass}}

# HikariCP (keep small on free tiers)
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX:5}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN:0}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_MS:60000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFE_MS:1800000}
spring.datasource.hikari.connection-timeout=${DB_CONN_TIMEOUT_MS:30000}

########################################
# JPA / Hibernate
########################################
# Default to "update" for dev; on Render set env JPA_DDL_AUTO=validate
# (or set JPA_DDL_AUTO=update for ONE boot to let Hibernate create tables, then switch to validate)
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

########################################
# Server
########################################
server.port=${PORT:8080}

########################################
# CORS (Angular dev / can override in prod)
########################################
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:4200}

########################################
# JWT (do NOT hardcode; override via env in prod)
########################################    
app.jwt.secret=${JWT_SECRET:a3b1c0d4e5f67890123456789abcdef0fedcba9876543210f0e0d0c0b0a0908}
app.jwt.expMinutes=${JWT_EXP_MINUTES:60}
app.jwt.issuer=${JWT_ISSUER:VaultFlow}
# optional refresh if supported
app.jwt.refreshExpMinutes=${JWT_REFRESH_EXP_MINUTES:43200}

########################################
# Rate limiting / Brute-force protection
########################################
ratelimit.login.perMinute=${RL_LOGIN_PER_MIN:5}
ratelimit.login.perHour=${RL_LOGIN_PER_HOUR:50}
ratelimit.login.burst=${RL_LOGIN_BURST:10}

ratelimit.transfer.perMinute=${RL_TX_PER_MIN:10}
ratelimit.transfer.perHour=${RL_TX_PER_HOUR:100}
ratelimit.transfer.burst=${RL_TX_BURST:20}
ratelimit.transfers.perMinute=${RL_TXS_PER_MIN:10}
ratelimit.transfers.perHour=${RL_TXS_PER_HOUR:100}

ratelimit.cache.maxSize=${RL_CACHE_MAX_SIZE:10000}
ratelimit.cache.expireAfterMinutes=${RL_CACHE_EXPIRE_MIN:60}

########################################
# Actuator (optional, helps with health checks)
########################################
management.endpoints.web.exposure.include=${ACTUATOR_EXPOSE:health,info}
management.endpoint.health.probes.enabled=true

########################################
# Logging
########################################
logging.level.org.springframework.security=${LOG_SPRING_SEC:INFO}
logging.level.com.example.securetransfer=${LOG_APP:INFO}
