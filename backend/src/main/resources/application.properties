# ==============================
# Datasource (Postgres local)
# ==============================
spring.datasource.url=jdbc:postgresql://localhost:5432/securedb
spring.datasource.username=secureuser
spring.datasource.password=securepass

# ==============================
# JPA / Hibernate
# ==============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ==============================
# Server
# ==============================
server.port=8080

# ==============================
# CORS (Angular dev)
# ==============================
app.cors.allowed-origins=http://localhost:4200

# ==============================
# JWT (development)
# ==============================
app.jwt.secret=Q3J5cHRvR3JhcGhpY0FscGhhYmV0U2VjcmV0MjA0OEByYW5kb21GZW5jZQ
app.jwt.expMinutes=60
app.jwt.issuer=VaultFlow
# optional if your code supports refresh tokens
app.jwt.refreshExpMinutes=43200

# ==============================
# Rate limiting / Brute-force protection
# (provide all keys commonly used by the service)
# ==============================
# Login: allow 5/min with small burst
ratelimit.login.perMinute=5
ratelimit.login.perHour=50
ratelimit.login.burst=10

# Transfers: allow 10/min, larger hourly cap and burst
ratelimit.transfer.perMinute=10
ratelimit.transfer.perHour=100
ratelimit.transfer.burst=20
# If your code refers to the plural key, include it too
ratelimit.transfers.perMinute=10
ratelimit.transfers.perHour=100

# Optional cache tuning (if your service uses Caffeine for buckets)
ratelimit.cache.maxSize=10000
ratelimit.cache.expireAfterMinutes=60

# ==============================
# Logging (optional)
# ==============================
logging.level.org.springframework.security=INFO
logging.level.com.example.securetransfer=INFO
